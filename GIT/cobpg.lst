     1  IDENTIFICATION DIVISION.
     2  PROGRAM-ID. COBPG.
     3 
     4  ENVIRONMENT DIVISION.
     5  DATA DIVISION.
     6  WORKING-STORAGE SECTION.
     7 
     8 
     9  77 WERT1 PIC X(12).
    10  77 WERT2 PIC X(25).
    11  77 WERT3 PIC X(20).
    12  77 neuezeile pic x value x'00'.
    13  01 pgconn USAGE POINTER.
    14  01 pgres  USAGE POINTER.
    15  01 resptr USAGE POINTER.
    16  01 resstr PICTURE x(80) based.
    17  01 tupl PIC 9(6).
    18  01 nfield PIC 9(6).
    19  01 sqlstr PIC x(250).
    20  01 zeile PIC 9(6) VALUE 0.
    21  01 spalte PIC 9(6) VALUE 0.
    22  PROCEDURE DIVISION.
    23  CALL "PQconnectdb" USING
    24  BY REFERENCE "user = xxx" & x"00" 
    25  BY REFERENCE "password = yyy" & x"00" 
    26  BY REFERENCE "dbname = zzz" & x"00" 
    27  RETURNING pgconn
    28  ON EXCEPTION
    29      DISPLAY
    30      "Fehler. lpq fehlt?" 
    31      UPON syserr
    32      END-DISPLAY
    33      STOP RUN RETURNING 1
    34  END-CALL.
    35  IF pgconn EQUAL NULL THEN
    36      DISPLAY
    37      "Fehler. DB nicht erreichbar" 
    38      UPON syserr
    39      END-DISPLAY
    40      STOP RUN RETURNING 1
    41  END-IF.
    42  STRING
    43      "SELECT a,b,c " DELIMITED BY SIZE
    44      "FROM tabelle;" DELIMITED BY SIZE
    45      x"00" 
    46  INTO SQLSTR
    47  END-STRING.
    48  CALL "PQexec" USING
    49      BY VALUE pgconn
    50      BY REFERENCE SQLSTR
    51      RETURNING pgres
    52  END-CALL.
    53  CALL "PQntuples" USING
    54      BY VALUE pgres
    55      RETURNING tupl
    56  END-CALL
    57  CALL "PQnfields" USING
    58      BY VALUE pgres
    59      RETURNING nfield
    60  END-CALL
    61  DISPLAY "Wir haben ",tupl," Zeilen" 
    62  DISPLAY neuezeile
    63  DISPLAY "Zeilen haben ",nfield," Spalten" 
    64  DISPLAY neuezeile
    65  PERFORM VARYING zeile FROM 0 BY 1
    66  UNTIL zeile = tupl
    67      PERFORM VARYING spalte FROM 0 BY 1
    68      UNTIL spalte = nfield
    69      CALL "PQgetvalue" USING
    70         BY VALUE pgres
    71         BY VALUE zeile
    72         BY VALUE spalte
    73         RETURNING resptr
    74      END-CALL
    75      IF resptr NOT EQUAL NULL THEN
    76      SET ADDRESS OF resstr TO resptr
    77      IF spalte = 0   THEN
    78         STRING resstr DELIMITED BY x"00" INTO WERT1 END-STRING
    79         DISPLAY
    80         "Zeile ",zeile
    81         " Spalte ",spalte," Wert= ", WERT1
    82         neuezeile
    83         END-DISPLAY
    84         ELSE IF spalte = 1 THEN
    85         STRING resstr DELIMITED BY x"00" INTO WERT2 END-STRING
    86         DISPLAY
    87         "Zeile ",zeile
    88         " Spalte ", spalte," Wert= ",WERT2
    89         neuezeile
    90         END-DISPLAY
    91         ELSE IF spalte = 2 THEN
    92         STRING resstr DELIMITED BY x"00" INTO WERT3 END-STRING
    93         DISPLAY
    94         "Zeile ",zeile
    95         " Spalte ", spalte," Wert= ",WERT3
    96         neuezeile
    97         END-DISPLAY
    98      END-IF
    99      END-IF
   100      END-PERFORM
   101      MOVE 0 to spalte
   102  END-PERFORM.
   103  CALL "PQclear"  USING BY VALUE pgres  END-CALL.
   104  CALL "PQfinish" USING BY VALUE pgconn END-CALL.
   105  SET pgconn to NULL.
   106  STOP RUN.
